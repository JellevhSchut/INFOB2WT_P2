Description
Develop a dynamic version of the website created in Assignment 1 using JavaScript (if necessary, you can change/extend the main theme). Use DOM methods, nodes, properties and events to interactively modify the content and appearance of your web-pages according to user actions. Use event listeners to process the events. Implement at least 1 case of event propagation (W3C model).
Create an info.html page whose main content is constructed purely through DOM manipulation (not document.write(), not .innerHTML). In other words, such elements as <nav>,< header>, <footer> and <aside> can still be a part of the file info.html, but all the actual content of the page has to be produced by JavaScript on the fly when the page is loaded. 
The content of this page should represent a structured description of your film: title (String), genre (String), year (Number), director (Director), writer(s) - array of Writers, stars - array of Actors (you do not have to specify the entire cast), poster (link to an image), trailer (link to a video), plot (String).
The content of this page should be populated using a hierarchy of objects where each object stores a structured representation of a corresponding entity. You need to implement several classes:
Class Movie will hold the structural representation of the entire film.
Class Artist will describe any person involved in the movie industry; it should specify at least the name and the year of birth.
Class Director will extend the class Artist; it can add a list of movies that this person has directed before.
Class Writer will extend the class Artist; it can add a list of books that this person has written before.
Class Actor will extend the class Artist; it can add a list of movies, in which this person starred before, and a link to his/her photo.
We assume, that nobody is interested in how writers and directors look like, and also that the same person cannot be an Actor and a Director and/or Writer.

Use ES6 classes and ES6-style object construction.
The users should be able to mouseover the names/photos of Artists and see their extended information (previous books, movies) in a tooltip.
Implement two menus in your <header> or <footer> that allow the user to dynamically change the appearance of elements on a page. One menu should be used to select an element, another to modify the selected element appearance. The options of the first menu should contain body, header, footer, aside, articles and sections (do not go deeper in the DOM hierarchy). They should be created on the fly by traversing the DOM of the page. In other words, a page can have more than one article and more than one section, and not necessarily have an aside, but the menu should be able to read them correctly from the DOM of the page. The option of the second menu should allow to change at least the font size and the color of the selected elements.
To implement menus you can use the HTML Select element. These pages explain how you can create and manipulate the Select element and its properties:
- https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select
- https://www.w3schools.com/jsref/dom_obj_select.asp
The website should continue following the principles of responsive design and accessibility.
Do not use external libraries and frameworks. 
Maintain good coding style
In addition to the good coding style rules specified in Assignment 1:
    separate scripting from the content 
    use camelCase notation when naming your methods, variables and classes
    use indentation when writing your JavaScript code
    use meaningful comments
    terminate JavaScript statements with a ";"